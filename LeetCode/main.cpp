void testTrailingZeroes();
void testDeleteNode();
void testSingleNumber();
void testContainsDuplicate();
void testAddDigits();
void testHammingWeight();
void testProductExceptSelf();
void testQueue();
void testClimbStairs();
void testSingleNumber3();
void testTitleToNumber();
void testsearchInsert();
void testIsAnagram();
void testIsPowerOfTwo();
void testSingleNumber2();
void testStack();
void testSearchMatrix();
void testSearchMatrix2();
void testReverse();
void testLargestNumber();
void testMoveZeroes();
void testConvertToTitle();
void testIsPalindrome();
void testReverseBits();
void testRemoveElement();
void testIsUgly();
void testPlusOne();
void testPermute();
void testSwapPairs();
void testCombine();
void testRemoveNthFromEnd();
void testCompareVersion();
void testIsValid();
void testGenerate();
void testRemoveDuplicates();
void testGetRow();
void testSummaryRanges();
void testRemoveDuplicates2();
void testDeleteDuplicates2();
void testSortList();
void testInsertionSortList();
void testMinimumTotal();
void testRotate();
void testReverseWords();
void testComputeArea();
void testNumTrees();
void testSpiralOrder();
void testGenerateMatrix();

int main()
{
	//testTrailingZeroes();
	//testDeleteNode();
	//testSingleNumber();
	//testContainsDuplicate();
	//testAddDigits();
	//testHammingWeight();
	//testProductExceptSelf();
	//testQueue();
	//testClimbStairs();
	//testSingleNumber3();
	//testTitleToNumber();
	//testsearchInsert();
	//testIsAnagram();
	//testIsPowerOfTwo();
	//testSingleNumber2();
	//testStack();
	//testSearchMatrix();
	//testSearchMatrix2();
	//testReverse();
	//testLargestNumber();
	//testMoveZeroes();
	//testConvertToTitle();
	//testIsPalindrome();
	//testReverseBits();
	//testRemoveElement();
	//testIsUgly();
	//testPlusOne();
	//testPermute();
	//testSwapPairs();
	//testCombine();
	//testRemoveNthFromEnd();
	//testCompareVersion();
	//testIsValid();
	//testGenerate();
	//testRemoveDuplicates();
	//testGetRow();
	//testSummaryRanges();
	//testRemoveDuplicates2();
	//testDeleteDuplicates2();
	//testSortList();
	//testInsertionSortList();
	//testMinimumTotal();
	//testRotate();
	//testReverseWords();
	//testComputeArea();
	//testNumTrees();
	//testSpiralOrder();
	testGenerateMatrix();
	return 0;
}