void testTrailingZeroes();
void testDeleteNode();
void testSingleNumber();
void testContainsDuplicate();
void testAddDigits();
void testHammingWeight();
void testProductExceptSelf();
void testQueue();
void testClimbStairs();
void testSingleNumber3();
void testTitleToNumber();
void testsearchInsert();
void testIsAnagram();
void testIsPowerOfTwo();
void testSingleNumber2();
void testStack();
void testSearchMatrix();
void testSearchMatrix2();
void testReverse();
void testLargestNumber();
void testMoveZeroes();
void testConvertToTitle();
void testIsPalindrome();
void testReverseBits();
void testRemoveElement();
void testIsUgly();
void testPlusOne();
void testPermute();
void testSwapPairs();
void testCombine();
void testRemoveNthFromEnd();
void testCompareVersion();
void testIsValid();
void testGenerate();
void testRemoveDuplicates();
void testGetRow();
void testSummaryRanges();
void testRemoveDuplicates2();
void testDeleteDuplicates2();
void testSortList();
void testInsertionSortList();
void testMinimumTotal();
void testRotateMatrix();
void testReverseWords();
void testComputeArea();
void testNumTrees();
void testSpiralOrder();
void testGenerateMatrix();
void testGetHint();
void testIsIsomorphic();
void testRotateArray();
void testLengthOfLongestSubstring();
void testRomanToInt();
void testIntToRoman();
void testMaxCoins();
void testMaxSubArray();
void testMajorityElement();
void testIsHappy();
void testContainsNearbyDuplicate();
void testContainsNearbyAlmostDuplicate();
void testWordPattern();
void testCountDigitOne();
void testSimplifyPath();
void testMaxProfit();
void testMaxProfit2();
void testLongestCommonPrefix();
void testFindMin();
void testEvalRPN();
void testMajorityElement2();
void testNumDecodings();
void testBulbSwitch();
void testAddBinary();
void testCoinChange();
void testIsPowerOfThree();
void testIsPowerOfFour();
void testLengthOfLIS();
void testMaxProduct();
void testMinPatches();
void testIntegerBreak();

int main()
{
	//testTrailingZeroes();
	//testDeleteNode();
	//testSingleNumber();
	//testContainsDuplicate();
	//testAddDigits();
	//testHammingWeight();
	//testProductExceptSelf();
	//testQueue();
	//testClimbStairs();
	//testSingleNumber3();
	//testTitleToNumber();
	//testsearchInsert();
	//testIsAnagram();
	//testIsPowerOfTwo();
	//testSingleNumber2();
	//testStack();
	//testSearchMatrix();
	//testSearchMatrix2();
	//testReverse();
	//testLargestNumber();
	//testMoveZeroes();
	//testConvertToTitle();
	//testIsPalindrome();
	//testReverseBits();
	//testRemoveElement();
	//testIsUgly();
	//testPlusOne();
	//testPermute();
	//testSwapPairs();
	//testCombine();
	//testRemoveNthFromEnd();
	//testCompareVersion();
	//testIsValid();
	//testGenerate();
	//testRemoveDuplicates();
	//testGetRow();
	//testSummaryRanges();
	//testRemoveDuplicates2();
	//testDeleteDuplicates2();
	//testSortList();
	//testInsertionSortList();
	//testMinimumTotal();
	//testRotate();
	//testReverseWords();
	//testComputeArea();
	//testNumTrees();
	//testSpiralOrder();
	//testGenerateMatrix();
	//testGetHint();
	//testIsIsomorphic();
	//testRotateArray();
	//testLengthOfLongestSubstring();
	//testRomanToInt();
	//testIntToRoman();
	//testMaxCoins();
	//testMaxSubArray();
	//testMajorityElement();
	//testIsHappy();
	//testContainsNearbyDuplicate();
	//testContainsNearbyAlmostDuplicate();
	//testWordPattern();
	//testCountDigitOne();
	//testSimplifyPath();
	//testMaxProfit();
	//testMaxProfit2();
	//testLongestCommonPrefix();
	//testFindMin();
	//testEvalRPN();
	//testMajorityElement2();
	//testNumDecodings();
	//testBulbSwitch(); 
	//testAddBinary();
	//testCoinChange();
	//testIsPowerOfThree();
	//testIsPowerOfFour();
	//testLengthOfLIS();
	//testMaxProduct();
	//testMinPatches();
	testIntegerBreak();
	return 0;
}